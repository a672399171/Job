<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace用于java代码调用时识别指定xml的mapper文件 -->
<mapper namespace="mapping.UserMapper">

    <resultMap type="com.zzu.model.Poor" id="poorResultMap" autoMapping="true">
        <id property="u_id" column="u_id"/>
        <association property="major" javaType="com.zzu.model.Major">
            <id property="id" column="major"/>
            <result property="major" column="m_major"></result>
            <association property="school" javaType="com.zzu.model.School" >
                <id property="id" column="id"/>
                <result property="school" column="school"></result>
            </association>
        </association>
    </resultMap>

    <select id="search" resultType="com.zzu.model.User" parameterType="hashmap">
        SELECT * FROM tb_user WHERE username=#{username} AND password=#{password}
    </select>

    <select id="searchUserBySchoolNum" resultType="com.zzu.model.User" parameterType="string">
        SELECT * FROM tb_user WHERE school_num=#{school_num}
    </select>

    <select id="exists" resultType="com.zzu.model.User" parameterType="string">
        SELECT * FROM tb_user WHERE username=#{username}
    </select>

    <select id="getUserById" resultType="com.zzu.model.User" parameterType="int">
        SELECT * FROM tb_user WHERE id=#{id}
    </select>

    <update id="modifyInfo" parameterType="hashmap">
        update tb_user set nickname=#{nickname},sex=#{sex},photo_src=#{photo_src} where id=#{id}
    </update>

    <update id="updateSecret" parameterType="hashmap">
        update tb_user set push=#{secret} where id=#{id}
    </update>

    <select id="searchVarifyByUsername" resultType="com.zzu.model.Varify" parameterType="string">
        SELECT * FROM tb_varify WHERE username=#{username}
    </select>

    <update id="updateVarify" parameterType="com.zzu.model.Varify">
        update tb_varify set varify=#{varify},time=#{time},email=#{email} where username=#{username}
    </update>

    <insert id="insertVarify" parameterType="com.zzu.model.Varify">
        insert into tb_varify (username,varify,time,email) values(#{username},#{varify},#{time},#{email})
    </insert>

    <select id="adminLogin" resultType="com.zzu.model.Admin" parameterType="hashmap">
        SELECT * FROM tb_admin WHERE username=#{username} AND password=#{password}
    </select>

    <select id="searchUsers" resultType="com.zzu.model.User" parameterType="hashmap">
        SELECT * FROM tb_user
        <if test="page != 0">
            limit ${start},${count}
        </if>
    </select>

    <select id="searchPoors" resultMap="poorResultMap" parameterType="hashmap">
        SELECT p.*,m.id as major,m.major as m_major,s.* FROM tb_poor p,tb_major m,tb_school s where p.major=m.id and
        m.s_id=s.id
        <if test="page != 0">
            limit ${start},${count}
        </if>
    </select>

    <select id="searchPoor" resultMap="poorResultMap" parameterType="int">
        SELECT p.*,m.id as major,m.major as m_major,s.* FROM tb_poor p,tb_major m,tb_school s where p.major=m.id and
        m.s_id=s.id and p.u_id=#{u_id}
    </select>

    <update id="insertPoor" parameterType="com.zzu.model.Poor">
        insert into tb_poor(u_id,name,email,major,src,status,isNew) values(#{u_id},#{name},#{email},#{major.id,jdbcType=NUMERIC},#{src},#{status},true)
          ON DUPLICATE KEY UPDATE name=#{name},email=#{email},major=#{major.id,jdbcType=NUMERIC},src=#{src},status=#{status},isNew=true
    </update>

    <select id="searchCompany" resultType="com.zzu.model.Company" parameterType="hashmap">
        SELECT * FROM tb_company WHERE username=#{username} AND password=#{password}
    </select>

    <select id="getCompanyById" resultType="com.zzu.model.Company" parameterType="int">
        SELECT * FROM tb_company WHERE id=#{id}
    </select>

    <update id="updateCompany" parameterType="com.zzu.model.Company">
        update tb_company set username=#{username},company_name=#{company_name},address=#{address},name=#{name},x=#{x},y=#{y},
         phone=#{phone},introduce=#{introduce},type=#{type},scope=#{scope},email=#{email},logo=#{logo} where id=#{id}
    </update>

    <insert id="addCompany" parameterType="com.zzu.model.Company">
        insert into tb_company(username,password,company_name,address,name,phone,email,introduce,type,scope)
        values(#{username},#{password},#{company_name},#{address},#{name},#{phone},#{email},#{introduce},#{type},#{scope})
    </insert>

    <update id="modifyCompanyPassword" parameterType="hashmap">
        update tb_company set password=#{password} where id=#{id}
    </update>

    <insert id="addUser" parameterType="com.zzu.model.User">
        insert into tb_user(username,password,school_num,nickname,phone,email,sex,push)
        values(#{username},#{password},#{school_num},#{nickname},#{phone},#{email},#{sex},#{push})
    </insert>

    <update id="modifyUser" parameterType="com.zzu.model.User">
        update tb_user set username=#{username},password=#{password},school_num=#{school_num},nickname=#{nickname},
        phone=#{phone},email=#{email},sex=#{sex},push=#{push} where id=#{id}
    </update>

    <delete id="deleteUsers" parameterType="int[]">
        delete from tb_user where id in
        <foreach collection="array" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="searchCompanies" resultType="com.zzu.model.Company" parameterType="hashmap">
        SELECT * FROM tb_company
        <if test="audit">
            where auth in (0,1)
        </if>
        <if test="page != 0">
            limit ${start},${count}
        </if>

    </select>

    <update id="changePassword" parameterType="com.zzu.model.User">
        update tb_user set password=#{password} where id=#{id}
    </update>

    <update id="bindEmail" parameterType="com.zzu.model.User">
        update tb_user set email=#{email} where id=#{id}
    </update>
    <select id="isUserOrSchoolNumRepeat" parameterType="com.zzu.model.User" resultType="com.zzu.model.User">
        select * from tb_user where (username=#{username} or school_num=#{school_num})
        <if test="id > 0">
            and id!=#{id}
        </if>
    </select>

    <select id="isUsernameRepeat" parameterType="com.zzu.model.Company" resultType="com.zzu.model.Company">
        select * from tb_company where username=#{username}
        <if test="id > 0">
            and id!=#{id}
        </if>
    </select>

    <update id="authPoor" parameterType="hashmap">
        update tb_poor set status=#{status},isNew=#{isNew} where u_id=#{u_id}
    </update>

    <update id="auditCompany" parameterType="hashmap">
        update tb_company set auth=#{audit} where id=#{id}
    </update>
</mapper>